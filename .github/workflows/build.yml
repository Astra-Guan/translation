name: 翻译程序跨平台打包

# 触发条件：当代码推送到main分支时自动运行
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# 定义任务
jobs:
  build:
    # 在哪些系统上运行（Windows和macOS最新版本）
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
    # 步骤1：拉取仓库代码
    - uses: actions/checkout@v4

    # 步骤2：安装Python环境
    - name: 设置Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'  # 使用3.9版本，兼容性更好
        cache: 'pip'  # 缓存依赖，加速构建

    # 步骤3：安装依赖库
    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install deep-translator==1.11.4  # 翻译核心库
        pip install pyinstaller  # 打包工具
        if [ "${{ matrix.os }}" = "macos-latest" ]; then
          # macOS额外安装tkinter
          brew install python-tk
        fi

    # 步骤4：打包应用程序
    - name: 打包程序
      run: |
        # 根据系统设置输出文件名
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          pyinstaller --onefile --windowed --name "实时翻译助手" *.py
        else
          pyinstaller --onefile --windowed --name "实时翻译助手" *.py
        fi

    # 步骤5：上传打包结果（作为可下载的 artifact）
    - name: 上传打包产物
      uses: actions/upload-artifact@v4
      with:
        name: 翻译助手-${{ matrix.os }}
        path: |
          dist/
          !dist/_internal  # 排除内部文件
